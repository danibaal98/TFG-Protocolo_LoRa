/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_PB_PLATINO_PB_H_INCLUDED
#define PB_PB_PLATINO_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _pb_PlatinoEvent {
    int32_t numPacket;
    float nodeLoad;
    float batteryLoad;
    float panelLoad;
    float windSpeed;
    float temperature;
    float humidity;
    float batteryVolt;
    bool has_samplingTime;
    int32_t samplingTime;
/* @@protoc_insertion_point(struct:pb_PlatinoEvent) */
} pb_PlatinoEvent;


/* Initializer values for message structs */
#define pb_PlatinoEvent_init_default             {0, 0, 0, 0, 0, 0, 0, 0, false, 0}
#define pb_PlatinoEvent_init_zero                {0, 0, 0, 0, 0, 0, 0, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define pb_PlatinoEvent_numPacket_tag            1
#define pb_PlatinoEvent_nodeLoad_tag             2
#define pb_PlatinoEvent_batteryLoad_tag          3
#define pb_PlatinoEvent_panelLoad_tag            4
#define pb_PlatinoEvent_windSpeed_tag            5
#define pb_PlatinoEvent_temperature_tag          6
#define pb_PlatinoEvent_humidity_tag             7
#define pb_PlatinoEvent_batteryVolt_tag          8
#define pb_PlatinoEvent_samplingTime_tag         9

/* Struct field encoding specification for nanopb */
#define pb_PlatinoEvent_FIELDLIST(X, a) \
X(a, STATIC, REQUIRED, INT32, numPacket, 1) \
X(a, STATIC, REQUIRED, FLOAT, nodeLoad, 2) \
X(a, STATIC, REQUIRED, FLOAT, batteryLoad, 3) \
X(a, STATIC, REQUIRED, FLOAT, panelLoad, 4) \
X(a, STATIC, REQUIRED, FLOAT, windSpeed, 5) \
X(a, STATIC, REQUIRED, FLOAT, temperature, 6) \
X(a, STATIC, REQUIRED, FLOAT, humidity, 7) \
X(a, STATIC, REQUIRED, FLOAT, batteryVolt, 8) \
X(a, STATIC, OPTIONAL, INT32, samplingTime, 9)
#define pb_PlatinoEvent_CALLBACK NULL
#define pb_PlatinoEvent_DEFAULT NULL

extern const pb_msgdesc_t pb_PlatinoEvent_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define pb_PlatinoEvent_fields &pb_PlatinoEvent_msg

/* Maximum encoded size of messages (where known) */
#define pb_PlatinoEvent_size                     57

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
